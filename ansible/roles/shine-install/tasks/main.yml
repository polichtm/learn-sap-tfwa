---
# This role installs and configures SHINE on top of an existing XSA instance
- name: Download SHINE Content (XSA)
  get_url:
    url: "{{ url_shine_xsa }}"
    dest: /usr/sap/{{ sap_sid|upper }}/HDB{{ sap_instancenum }}/XSASHINE.ZIP
    timeout: "{{ url_timeout }}"
  register: result
  until: result is succeeded
  retries: "{{ url_retries_cnt }}"
  delay: "{{ url_retries_delay }}"

- name: Log into XSA
  shell: |
    . ~/.bashrc
    xs login --skip-ssl-validation -a https://{{ ansible_fqdn }}:3{{ sap_instancenum }}30/ -s SAP -u XSA_ADMIN  -p {{ pwd_db_xsaadmin }}
  args:
    executable: /bin/bash
    chdir: "/usr/sap/{{ sap_sid|upper }}/HDB{{ sap_instancenum }}"

- name: Install SHINE
  shell: |
    . ~/.bashrc
    xs install XSASHINE.ZIP
  args:
    executable: /bin/bash
    chdir: "/usr/sap/{{ sap_sid|upper }}/HDB{{ sap_instancenum }}"

- name: Deploy prepare SQL for SHINE
  template:
    src: prepare_shine.sql.j2
    dest: /usr/sap/{{ sap_sid|upper }}/HDB{{ sap_instancenum }}/prepare_shine.sql

- name: Execute SQL to prepare SHINE
  shell: |
    . ~/.bashrc
    hdbsql -d SYSTEMDB -u SYSTEM -p {{ pwd_db_system }} -i {{ sap_instancenum }} -I /usr/sap/{{ sap_sid|upper }}/HDB{{ sap_instancenum }}/prepare_shine.sql
  args:
    executable: /bin/bash

- name: Get SHINE UI URL
  shell: |
    . ~/.bashrc
    xs app shine-site-web --urls
  register: shineui_url
  args:
    executable: /bin/bash

- debug:
    msg: "SHINE UI URL = {{ shineui_url }}"
